{
    "collab_server" : "",
    "contents" : "makeHMM=function(){\n  rnds=runif(20,.06,.94)\n  out=list(Tr=round(matrix(c(rnds[1],1-rnds[1],rnds[2],1-rnds[2]),nrow=2,byrow=T),1),\n       Em=round(matrix(c(rnds[3],1-rnds[3],rnds[4],1-rnds[4]),nrow=2,byrow=T),1),\n       In=c(.5,.5),\n       Obs=sample(c(T,F),2,T))\n  rownames(out$Tr)=c(\"state(t)=False\",\"state(t)=True\")\n  colnames(out$Tr)=c(\"state(t+1)=False\",\"state(t+1)=True\")\n  rownames(out$Em)=c(\"state=False\",\"state=True\")\n  colnames(out$Em)=c(\"emission=False\",\"emission=True\")\n  names(out$In)=c(\"state(0)=False\",\"state(0)=True\")\n  names(out$Obs)=c(\"emission(1)\",\"emission(2)\")\n  return (out)\n}\n\nsolveFB=function(hmm){\n  f0=hmm$In\n  ob1=ifelse(hmm$Obs[1],2,1)\n  f11=(f0[1]*hmm$Tr[1,1]+f0[2]*hmm$Tr[2,1])*hmm$Em[1,ob1]\n  f12=(f0[1]*hmm$Tr[1,2]+f0[2]*hmm$Tr[2,2])*hmm$Em[2,ob1]\n  f1=c(f11,f12)\n  ob2=ifelse(hmm$Obs[2],2,1)\n  f21=(f1[1]*hmm$Tr[1,1]+f1[2]*hmm$Tr[2,1])*hmm$Em[1,ob2]\n  f22=(f1[1]*hmm$Tr[1,2]+f1[2]*hmm$Tr[2,2])*hmm$Em[2,ob2]\n  f2=c(f21,f22)\n  names(f0)=NULL\n  names(f1)=NULL\n  names(f2)=NULL\n  print(\"Forward Values:\")\n  print(f0)\n  print(f1)\n  print(f2)\n\n  b2=c(1,1)\n  b11=(b2[1]*hmm$Tr[1,1]*hmm$Em[1,ob2])+(b2[2]*hmm$Tr[1,2]*hmm$Em[2,ob2])\n  b12=(b2[1]*hmm$Tr[2,1]*hmm$Em[1,ob2])+(b2[2]*hmm$Tr[2,2]*hmm$Em[2,ob2])\n  b1=c(b11,b12)\n  b01=(b1[1]*hmm$Tr[1,1]*hmm$Em[1,ob1])+(b1[2]*hmm$Tr[1,2]*hmm$Em[2,ob1])\n  b02=(b1[1]*hmm$Tr[2,1]*hmm$Em[1,ob1])+(b1[2]*hmm$Tr[2,2]*hmm$Em[2,ob1])\n  b0=c(b01,b02)\n  names(b0)=NULL\n  names(b1)=NULL\n  names(b2)=NULL\n  print(\"Backward Values:\")\n  print(b0)\n  print(b1)\n  print(b2)\n\n  print(\"State Probabilities:\")\n  print((b0*f0)/sum(b0*f0))\n  print((b1*f1)/sum(b1*f1))\n  print((b2*f2)/sum(b2*f2))\n}\nsolveVit=function(hmm){\n  p0=hmm$In\n  ob1=ifelse(hmm$Obs[1],2,1)\n  p11_options=c(p0[1]*hmm$Tr[1,1]*hmm$Em[1,ob1],p0[2]*hmm$Tr[2,1]*hmm$Em[1,ob1])\n  names(p11_options)=NULL\n  p11=max(p11_options)\n  p11_from=which.max(p11_options)\n  p12_options=c(p0[1]*hmm$Tr[1,2]*hmm$Em[2,ob1],p0[2]*hmm$Tr[2,2]*hmm$Em[2,ob1])\n  names(p12_options)=NULL\n  p12=max(p12_options)\n  p12_from=which.max(p12_options)\n  p1=c(p11,p12)\n\n  print(\"Step 1: Path Node Probabilities\")\n  print(p1)\n  print(\"Step 1: Path Step Origins\")\n  print(c(ifelse(p11_from==1,\"FALSE\",\"TRUE\"),ifelse(p12_from==1,\"FALSE\",\"TRUE\")))\n\n  ob2=ifelse(hmm$Obs[2],2,1)\n  p21_options=c(p1[1]*hmm$Tr[1,1]*hmm$Em[1,ob2],p1[2]*hmm$Tr[2,1]*hmm$Em[1,ob2])\n  names(p21_options)=NULL\n  p21=max(p21_options)\n  p21_from=which.max(p21_options)\n  p22_options=c(p1[1]*hmm$Tr[1,2]*hmm$Em[2,ob2],p1[2]*hmm$Tr[2,2]*hmm$Em[2,ob2])\n  names(p22_options)=NULL\n  p22=max(p22_options)\n  p22_from=which.max(p22_options)\n  p2=c(p21,p22)\n\n  print(\"Path Node Probabilities\")\n  print(p2)\n  print(\"Step 1: Path Step Origins\")\n  print(c(ifelse(p21_from==1,\"FALSE\",\"TRUE\"),ifelse(p22_from==1,\"FALSE\",\"TRUE\")))\n\n  p2_node=which.max(p2)\n  p1_node=ifelse(p2_node==1,p21_from,p22_from)\n  p0_node=ifelse(p1_node==1,p11_from,p12_from)\n  print(paste(\"Most probable path:\",ifelse(p0_node==1,\"FALSE\",\"TRUE\"),ifelse(p1_node==1,\"FALSE\",\"TRUE\"),ifelse(p2_node==1,\"FALSE\",\"TRUE\")))\n  print(paste(\"Probabality:\",max(p2)))\n}\n\nmakeQuestionHMM_FB=function(seed=NA,answer=T,latex=F){\n  if(!is.na(seed))\n    set.seed(seed)\n  hmm=makeHMM()\n  if (latex){\n    str=\"hmmfb\"\n    cat(\"\\\\clearpage\\n\")\n    cat(\"\\\\section{Hidden Markov Models: Forward-Backward Algorithm}\\n\")\n    cat(\"\\nTables~\\\\ref{\",str,\"1} to~\\\\ref{\",str,\"4} provide the transition matrix, emission matrix, initial state and a sequence of observations for a hidden Markov model. \",sep=\"\")\n    cat(\"Use the forward-backward algorithm to calculate the probability distributions for the state of the system at times 0, 1 and 2 given the observations. Show all working. (4 marks)\\n\\n\")\n    latexHMM(hmm,str)\n  }\n  else\n    consoleHMM(hmm)\n  if (answer)\n    solveFB(hmm)\n}\nconsoleHMM=function(hmm){\n  print(\"Transition Matrix:\")\n  print(hmm$Tr)\n  print(\"Emission Matrix:\")\n  print(hmm$Em)\n  print(\"Initial State:\")\n  print(hmm$In)\n  print(\"Observations:\")\n  print(hmm$Obs)\n}\nlatexHMM=function(hmm,str){\n\n  cat(\"\\\\begin{table}[h!]\\n\")\n  cat(\"\\\\caption{Transition Matrix}\\n\")\n  cat(\"\\\\label{\",str,\"1}\\n\",sep=\"\")\n  cat(\"\\\\begin{center}\\n\")\n  cat(\"\\\\begin{tabular}{ |c||c|c| } \\n\")\n  cat(\"\\\\hline\\n\")\n  cat(\" $S_{t-1}$ & $S_t$=0 & $S_t$=1\\\\\\\\\\n\")\n  cat(\"\\\\hline\\n\")\n  cat(\" 0 & \",hmm$Tr[1,1],\" & \",hmm$Tr[1,2],\"\\\\\\\\\\n\",sep=\"\")\n  cat(\" 1 & \",hmm$Tr[2,1],\" & \",hmm$Tr[2,2],\"\\\\\\\\\\n\",sep=\"\")\n  cat(\"\\\\hline\\n\")\n  cat(\"\\\\end{tabular}\\n\")\n  cat(\"\\\\end{center}\\n\")\n  cat(\"\\\\end{table}\\n\")\n\n  cat(\"\\\\begin{table}[h!]\\n\")\n  cat(\"\\\\caption{Emission Matrix}\\n\")\n  cat(\"\\\\label{\",str,\"2}\\n\",sep=\"\")\n  cat(\"\\\\begin{center}\\n\")\n  cat(\"\\\\begin{tabular}{ |c||c|c| } \\n\")\n  cat(\"\\\\hline\\n\")\n  cat(\" $S$ & $E=0$ & $E=1$\\\\\\\\\\n\")\n  cat(\"\\\\hline\\n\")\n  cat(\" 0 & \",hmm$Em[1,1],\" & \",hmm$Em[1,2],\"\\\\\\\\\\n\",sep=\"\")\n  cat(\" 1 & \",hmm$Em[2,1],\" & \",hmm$Em[2,2],\"\\\\\\\\\\n\",sep=\"\")\n  cat(\"\\\\hline\\n\")\n  cat(\"\\\\end{tabular}\\n\")\n  cat(\"\\\\end{center}\\n\")\n  cat(\"\\\\end{table}\\n\")\n\n  cat(\"\\\\begin{table}[h!]\\n\")\n  cat(\"\\\\caption{Initial State}\\n\")\n  cat(\"\\\\label{\",str,\"3}\\n\",sep=\"\")\n  cat(\"\\\\begin{center}\\n\")\n  cat(\"\\\\begin{tabular}{ |c|c| } \\n\")\n  cat(\"\\\\hline\\n\")\n  cat(\" $S=0$ & $S=1$\\\\\\\\\\n\")\n  cat(\"\\\\hline\\n\")\n  cat(hmm$In[1],\" & \",hmm$In[2],\"\\\\\\\\\\n\",sep=\"\")\n  cat(\"\\\\hline\\n\")\n  cat(\"\\\\end{tabular}\\n\")\n  cat(\"\\\\end{center}\\n\")\n  cat(\"\\\\end{table}\\n\")\n\n  cat(\"\\\\begin{table}[h!]\\n\")\n  cat(\"\\\\caption{Observations}\\n\")\n  cat(\"\\\\label{\",str,\"4}\\n\",sep=\"\")\n  cat(\"\\\\begin{center}\\n\")\n  cat(\"\\\\begin{tabular}{ |c|c| } \\n\")\n  cat(\"\\\\hline\\n\")\n  cat(\" Time=1 & Time=2\\\\\\\\\\n\")\n  cat(\"\\\\hline\\n\")\n  cat(hmm$Obs[1],\" & \",hmm$Obs[2],\"\\\\\\\\\\n\",sep=\"\")\n  cat(\"\\\\hline\\n\")\n  cat(\"\\\\end{tabular}\\n\")\n  cat(\"\\\\end{center}\\n\")\n  cat(\"\\\\end{table}\\n\")\n}\n\ntestSolveHMM_FB=function(seed=NA){\n  if(!is.na(seed))\n    set.seed(seed)\n  hmm=makeHMM()\n  solveFB(hmm)\n}\nmakeQuestionHMM_Vit=function(seed=NA,answer=T,latex=F){\n  if(!is.na(seed))\n    set.seed(seed)\n  hmm=makeHMM()\n  if (latex) {\n    str=\"hmmvit\"\n    cat(\"\\\\clearpage\\n\")\n    cat(\"\\\\section{Hidden Markov Models: Viterbi Algorithm}\\n\")\n    cat(\"\\nTables~\\\\ref{\",str,\"1} to~\\\\ref{\",str,\"4} provide the transition matrix, emission matrix, initial state and a sequence of observations for a hidden Markov model. \",sep=\"\")\n    cat(\"Use the Viterbi algorithm to calculate the most probable path and its probability. Show all working. (3 marks)\\n\\n\")\n    latexHMM(hmm,str)\n  }\n  else {\n    consoleHMM(hmm)\n  }\n  if (answer)\n    solveVit(hmm)\n}\ntestSolveHMM_Vit=function(seed=NA){\n  if(!is.na(seed))\n    set.seed(seed)\n  hmm=makeHMM()\n  solveVit(hmm)\n}\n\n\"Single Calculation Error: 3.5\"\n\"Forward and Backward Correct: 3\"\n\"Forward and Smoothing Correct, Backward Partially Correct: 2.5\"\n\"Forward and Smoothing Correct: 1.5\"\n\"Forward Correct, Backward Partially Correct: 1.5\"\n\"Forward Correct: 1\"\n\"Smoothing Correct: .5\"\n\n\"Knowing the b values for time 2 is insufficient to consider the backward partially correct.\"\n\n",
    "created" : 1508096974631.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1501260962",
    "id" : "4163803D",
    "lastKnownWriteTime" : 1514889948,
    "last_content_update" : 1514889948462,
    "path" : "C:/Users/Acer/Desktop/Dokument/AI/2017/AIExam/R/HMM_FB.R",
    "project_path" : "R/HMM_FB.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}